/* Protofish
 *
 * Author: MincoMK
 * Date: 2025-08-30
 * 
 * Modification Rules:
 * 1. Always document in protofish.md.
 * 2. Always review the content.
 */

syntax = "proto3";

package payload;

import "common/schema.proto";

// Handshake initializer
message ClientHello {
  common.Version version = 1;
  optional bytes resume_connection_token = 2;
}

// Handshake response
message ServerHello {
  common.Version version = 1;
  bool ok = 2;
  optional common.ServerHelloInfo info = 4;
}

// Represents that requests in the context is successfully completed
message OK {
}

// Represents the error code and message under the context
message Error {
  common.ErrorType error_type = 1;
  string message = 2;
}

// Sent when a new stream is initiated.
message StreamOpen {
  uint64 stream_id = 1;
  common.StreamCreateMeta meta = 2;
}

// Sent when a new stream is destroyed.
message StreamClose {
  uint64 stream_id = 1;
}

// Arbitary data which contains downstream data.
message ArbitaryData {
  bytes content = 1;
}

// Keepalive request
message Keepalive {}

// Close the connection
message Close {}

// Starts a benchamrk
message BenchmarkStart {
  common.StreamIntegrityType integrity_type = 1;
  uint64 byte_count = 2;
}

// Ends a benchmark
message BenchmarkEnd {}
